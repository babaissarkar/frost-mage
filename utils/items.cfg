##TEXT TAKE_IT_STRING LEAVE_IT_STRING CANNOT_TAKE_TEXT 
#define ITEM_PICK_UP ID X Y CAN_TAKE_FILTER_WML IMAGE OBJECT_WML
#arg TYPE
"weapon"
#endarg
    [item]
        x = {X}
        y = {Y}
        image={IMAGE}
    [/item]
    #  [lua]
    #      [args]
    #          x,y = {X},{Y}
    #          {OBJECT_WML}
    #      [/args]
    #      code = <<
    #          local t = ...
    #          wesnoth.interface.add_item_image(t.x, t.y, t.object.image)
    #      >>
    #  [/lua]

    [event]
        name=moveto
        id={ID}_pickup_event
        first_time_only=no
        
        [filter]
            x = {X}
            y = {Y}
        [/filter]
        
        [if]
            [have_unit]
                x,y={X},{Y}
                {CAN_TAKE_FILTER_WML}
            [/have_unit]
            [then]
                
                {VARIABLE "item_image" {IMAGE}}
                [lua]
                    [args]
                        {OBJECT_WML}
                    [/args]
                    code = <<
                        local obj = ...
                        wml.variables['choice'] = show_stats_dialog(wml.variables['item_image'], obj[1][2], nil, nil)
                    >>
                [/lua]
                [switch]
                    variable = choice
                    [case]
                        value = 1
                        
                        [remove_item]
                            x,y={X},{Y}
                            image={IMAGE}
                        [/remove_item]
                        
                        {VARIABLE_OP items_count add 1}
                        
                        [set_variables]
                            name=items
                            mode=append
                            [value]
                                unitid=$unit.id
                                {OBJECT_WML}
                            [/value]
                        [/set_variables]
                        
                        {VARIABLE type {TYPE}}
                        [switch]
                            variable = type
                            [case]
                                value = weapon
                                [modify_unit]
                                    [filter]
                                        id=$unit.id
                                    [/filter]
                                    {OBJECT_WML}
                                    [variables]
                                        has_item=yes
                                        [weapon]
                                            {OBJECT_WML}
                                        [/weapon]
                                    [/variables]
                                [/modify_unit]
                            [/case]
                            [case]
                                value = armor
                                [modify_unit]
                                    [filter]
                                        id=$unit.id
                                    [/filter]
                                    {OBJECT_WML}
                                    [variables]
                                        has_item=yes
                                        [armor]
                                            {OBJECT_WML}
                                        [/armor]
                                    [/variables]
                                [/modify_unit]
                            [/case]
                            [case]
                                value = amulet
                                [modify_unit]
                                    [filter]
                                        id=$unit.id
                                    [/filter]
                                    {OBJECT_WML}
                                    [variables]
                                        has_item=yes
                                        [amulet]
                                            {OBJECT_WML}
                                        [/amulet]
                                    [/variables]
                                [/modify_unit]
                            [/case]
                            [case]
                                value = trinket
                                [modify_unit]
                                    [filter]
                                        id=$unit.id
                                    [/filter]
                                    {OBJECT_WML}
                                    [variables]
                                        has_item=yes
                                        [trinket]
                                            {OBJECT_WML}
                                        [/trinket]
                                    [/variables]
                                [/modify_unit]
                            [/case]
                        [/switch]
                        {CLEAR_VARIABLE type}
                        
                        [store_unit]
                            [filter]
                                id=$unit.id
                            [/filter]
                            variable=$unit.id
                        [/store_unit]
                        
                        [remove_event]
                            id={ID}_pickup_event
                        [/remove_event]
                        
                        # Trigger item pickup events
                        [fire_event]
                            name=item_pickup
                            [primary_unit]
                                id=$unit.id
                            [/primary_unit]
                        [/fire_event]
                        
                    [/case]
                    [case]
                        value = 2
                        [allow_undo]
                        [/allow_undo]
                    [/case]
                    [case]
                        value = 3

                        [remove_item]
                            x,y={X},{Y}
                            image={IMAGE}
                        [/remove_item]
                        
                        {VARIABLE type {TYPE}}
                        [switch]
                            variable = type
                            [case]
                                value = "weapon"
                                [set_variables]
                                    name=stored_weapons
                                    mode=append
                                    [value]
                                        {OBJECT_WML}
                                    [/value]
                                [/set_variables]
                            [/case]
                            [case]
                                value = "armor"
                                [set_variables]
                                    name=stored_armors
                                    mode=append
                                    [value]
                                        {OBJECT_WML}
                                    [/value]
                                [/set_variables]
                            [/case]
                            [case]
                                value = "amulet"
                                [set_variables]
                                    name=stored_amulets
                                    mode=append
                                    [value]
                                        {OBJECT_WML}
                                    [/value]
                                [/set_variables]
                            [/case]
                            [case]
                                value = "trinket"
                                [set_variables]
                                    name=stored_trinkets
                                    mode=append
                                    [value]
                                        {OBJECT_WML}
                                    [/value]
                                [/set_variables]
                            [/case]
                        [/switch]

                        [remove_event]
                            id={ID}_pickup_event
                        [/remove_event]
                    [/case]
                [/switch]
            [/then]
            [else]
                [message]
                    speaker=narrator
                    message= _ "Can't take!"
                    image={IMAGE}
                    side_for=$side_number
                    # the above is used to prevent an AI side from
                    # accidentally triggering this dialog
                [/message]
                
                [allow_undo]
                [/allow_undo]
            [/else]
        [/if]
    [/event]

    {CLEAR_VARIABLE cur_id}

#enddef

#define INVENTORY_MENU
    [set_menu_item]
        id=item_stats
        description= _ "Inventory"
        [show_if]
            [have_unit]
                x,y=$x1,$y1
            [/have_unit]
        [/show_if]
        [command]
            [lua]
                code = <<
                    local preshow = function(dialog)
                        -- Storage --
                        -- Initialize treeview
                        local root_node = dialog:find("storage_list")
                        local wnode = root_node:add_item_of_type("category")
                        wnode.item_name.label = "Weapon"
                        wnode.unfolded = true
                        local anode = root_node:add_item_of_type("category")
                        anode.item_name.label = "Armor"
                        anode.unfolded = true
                        local tnode = root_node:add_item_of_type("category")
                        tnode.item_name.label = "Trinket"
                        tnode.unfolded = true
                        local amnode = root_node:add_item_of_type("category")
                        amnode.item_name.label = "Amulet"
                        amnode.unfolded = true

                        -- Add items to the treeview
                        local len = wml.variables['stored_weapons.length']
                        for i=0,len-1 do
                            local node = wnode:add_item_of_type("item")
                            node.item_name.label = wml.variables['stored_weapons['..i..'].object.name']
                        end
                        local len = wml.variables['stored_armors.length']
                        for i=0,len-1 do
                            local node = anode:add_item_of_type("item")
                            node.item_name.label = wml.variables['stored_armors['..i..'].object.name']
                        end
                        local len = wml.variables['stored_trinkets.length']
                        for i=0,len-1 do
                            local node = tnode:add_item_of_type("item")
                            node.item_name.label = wml.variables['stored_trinkets['..i..'].object.name']
                        end
                        local len = wml.variables['stored_amulets.length']
                        for i=0,len-1 do
                            local node = amnode:add_item_of_type("item")
                            node.item_name.label = wml.variables['stored_amulets['..i..'].object.name']
                        end
                        
                        -- Show Equipped Items --
                        local curr_unit = wesnoth.units.find_on_map{
                            x = wml.variables['x1'],
                            y = wml.variables['y1']
                        }[1]

                        if curr_unit.variables.has_item then
                            if curr_unit.variables.weapon ~= nil then
                                local weapon_img = dialog:find("weapon")
                                local weapon = curr_unit.variables.weapon[1][2]
                                weapon_img.label = weapon.image.."~BLIT(misc/achievement-frames/frame-6-royal.png)"
                                dialog:find("weapon_btn").on_button_click = function()
                                    show_stats_dialog(weapon.image, weapon, "Unequip", "Drop")
                                end
                            end
                            if curr_unit.variables.armor ~= nil then
                                local armor_img = dialog:find("armor")
                                local armor = curr_unit.variables.armor[1][2]
                                armor_img.label = armor.image.."~BLIT(misc/achievement-frames/frame-2-orange.png)"
                                dialog:find("armor_btn").on_button_click = function()
                                    show_stats_dialog(armor.image, armor, "Unequip", "Drop")
                                end
                            end
                            if curr_unit.variables.amulet ~= nil then
                                local amulet_img = dialog:find("amulet")
                                local amulet = curr_unit.variables.amulet[1][2]
                                amulet_img.label = amulet.image.."~BLIT(misc/achievement-frames/frame-3-jade.png)"
                                dialog:find("amulet_btn").on_button_click = function()
                                    show_stats_dialog(amulet.image, amulet, "Unequip", "Drop")
                                end
                            end
                            if curr_unit.variables.trinket ~= nil then
                                local trinket_img = dialog:find("trinket")
                                local trinket = curr_unit.variables.trinket[1][2]
                                trinket_img.label = trinket.image.."~BLIT(misc/achievement-frames/frame-4-sky.png)"
                                dialog:find("trinket_btn").on_button_click = function()
                                    show_stats_dialog(trinket.image, trinket, "Unequip", "Drop")
                                end
                            end
                        end

                        local storage_list = dialog:find("storage_list")

                        -- Inventory Show Button
                        local inventory_show = dialog:find("inv_show")
                        inventory_show.on_button_click = function()
                            local node_id = storage_list.selected_item_path[1]
                            local subnode_id = storage_list.selected_item_path[2]-1
                            local item_obj = nil
                            if node_id == 1 then
                                var_name = 'stored_weapon['..subnode_id..']'
                                item_obj = wml.variables[var_name][1][2]
                                wml.variables['drop_item'] = item_obj
                                local status = show_stats_dialog(item_obj.image, item_obj, "Equip", "Drop")
                                if status == 3 then
                                    wnode:remove_items_at(subnode_id, 1)
                                    wml.variables['drop'] = true
                                    wesnoth.wml_actions.clear_variable{name = var_name}
                                    dialog:close()
                                end
                            elseif node_id == 2 then
                                var_name = 'stored_armor['..subnode_id..']'
                                item_obj = wml.variables[var_name][1][2]
                                wml.variables['drop_item'] = item_obj
                                local status = show_stats_dialog(item_obj.image, item_obj, "Equip", "Drop")
                                if status == 3 then
                                    anode:remove_items_at(subnode_id, 1)
                                    wml.variables['drop'] = true
                                    wesnoth.wml_actions.clear_variable{name = var_name}
                                    dialog:close()
                                end
                            elseif node_id == 3 then
                                var_name = 'stored_trinkets['..subnode_id..']'
                                item_obj = wml.variables[var_name][1][2]                               
                                local status = show_stats_dialog(item_obj.image, item_obj, "Equip", "Drop")
                                if status == 3 then
                                    wml.variables['drop_item'] = item_obj
                                    tnode:remove_items_at(subnode_id, 1)
                                    wml.variables['drop'] = true
                                    wesnoth.wml_actions.clear_variable{name = var_name}
                                    dialog:close()
                                elseif status == 1 then
                                    tnode:remove_items_at(subnode_id, 1)
                                    wesnoth.wml_actions.clear_variable{name = var_name}
                                    curr_unit:add_modification("object", item_obj)
                                    gui.alert(wesnoth.as_text(curr_unit.variables['trinket']))

                                    curr_unit.variables['trinket.object'] = item_obj

                                    if curr_unit.variables['has_item'] == false or curr_unit.variables['has_item'] == nil then
                                        curr_unit.variables['has_item'] = true
                                    end
                                    dialog:close()
                                end
                            elseif node_id == 4 then
                                var_name = 'stored_amulets['..subnode_id..']'
                                item_obj = wml.variables[var_name][1][2]
                                wml.variables['drop_item'] = item_obj
                                local status = show_stats_dialog(item_obj.image, item_obj, "Equip", "Drop")
                                if status == 3 then
                                    amnode:remove_items_at(subnode_id, 1)
                                    wml.variables['drop'] = true
                                    wesnoth.wml_actions.clear_variable{name = var_name}
                                    dialog:close()
                                end
                            end
                        end

                    end
                    
                    gui.show_dialog(wml.get_child(wml.load("~add-ons/Frost_Mage/gui/inventory.cfg"), "resolution"), preshow, function() end)
                >>
            [/lua]
            [if]
                [variable]
                    name = drop
                    boolean_equals = yes
                [/variable]
                [then]
                    {VARIABLE item_x $x1}
                    {VARIABLE item_y $y1}
                    {ITEM_PICK_UP $drop_item.id $item_x $item_y (level=1) $drop_item.image
                    ([insert_tag]
                        name = object
                        variable = drop_item
                     [/insert_tag])
                    TYPE="weapon"}
                    {CLEAR_VARIABLE drop}
                [/then]
            [/if]
        [/command]
    [/set_menu_item]
#enddef

#define MENU_EVENT
    [event]
        name="prestart"
        {INVENTORY_MENU}
    [/event]
#enddef

[resource]
    id = "joafm_items"
    [lua]
    	code = << wesnoth.dofile("~add-ons/Frost_Mage/lua/items.lua") >>
    [/lua]
    {MENU_EVENT}
[/resource]
